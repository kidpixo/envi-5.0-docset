<?xml version='1.0' encoding='utf-8'?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns:madcap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" madcap:lastblockdepth="2" madcap:lastheight="135.6667" madcap:lastwidth="592" madcap:disablemasterstylesheet="true" madcap:tocpath="Tutorials|Using the Tools" madcap:medium="non-print" madcap:inpreviewmode="false" madcap:preloadimages="false" madcap:runtimefiletype="Topic" madcap:targettype="WebHelp" lang="en-us" xml:lang="en-us" madcap:pathtohelpsystem="../../" madcap:helpsystemfilename="ENVIHelp.xml" madcap:searchtype="Stem">
 <!-- saved from url=(0014)about:internet -->
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>
   Tutorial: Working with Raster Layers
  </title>
  <link href="../SkinSupport/MadCap.css" rel="stylesheet" />
  <link href="../Resources/Stylesheets/Doc_Style.css" rel="stylesheet" />
  <script src="../SkinSupport/MadCapAll.js" type="text/javascript">
  </script>
 </head>
 <body>
  <p class="MCWebHelpFramesetLink" style="display: none;">
   <a href="../../ENVIHelp_CSH.htm#ExtendCustomize/TutorialRasterLayers.htm" style="">
    Open topic with navigation
   </a>
  </p>
  <div class="MCBreadcrumbsBox_0">
   <span class="MCBreadcrumbsPrefix">
    <![CDATA[ ]]>
   </span>
   <a class="MCBreadcrumbsLink" href="../Tutorials/Tutorials.htm">
    Tutorials
   </a>
   <span class="MCBreadcrumbsDivider">
    &gt;
   </span>
   <a class="MCBreadcrumbsLink" href="../Tutorials/Tutorials.htm">
    Using the Tools
   </a>
   <span class="MCBreadcrumbsDivider">
    &gt;
   </span>
   <span class="MCBreadcrumbs">
    Tutorial: Working with Raster Layers
   </span>
  </div>
  <h1>
   Tutorial: Working with Raster Layers
   <a name="kanchor467">
   </a>
  </h1>
  <p>
   In this tutorial you will learn a fundamental concept of customizing
   <span class="DocumentTitleProductName">
    ENVI
   </span>
   : working with raster layers. You will create two views that contain different color combinations of the same raster image, then geographically link them.
  </p>
  <p>
   The
   <span class="DocumentTitleProductName">
    ENVI
   </span>
   application programming interface (API) lets you customize
   <span class="DocumentTitleProductName">
    ENVI
   </span>
   functionality by writing simple object-oriented commands. See "Object-Oriented Programming Concepts" in IDL Help, or consult another reference on object-oriented programming if you are new to this subject. You do not need to be an expert in object-oriented programming to customize
   <span class="DocumentTitleProductName">
    ENVI
   </span>
   .
  </p>
  <p>
   Type the commands below (shown in boldface) at the IDL/
   <span class="DocumentTitleProductName">
    ENVI
   </span>
   command line to interact with the
   <span class="DocumentTitleProductName">
    ENVI
   </span>
   application. Commands are not case-sensitive. You can also write
   <a href="BatchPrograms.htm">
    batch programs
   </a>
   or
   <a href="write_deploy_toolbox_extensions.htm">
    toolbox extensions
   </a>
   that include this code.
  </p>
  <h3>
   Example 1: Use the LAYOUT keyword to define views
  </h3>
  <p>
   This example demonstrates how you use the LAYOUT keyword to the
   <span class="DocumentTitleProductName">
    ENVI
   </span>
   object class to define multiple views at the beginning of your session. It shows you how to start
   <span class="DocumentTitleProductName">
    ENVI
   </span>
   with two default views, read an image file, and define the image as a raster object. Then retrieve a reference to all of the views and treat them as array elements to populate them with different color combinations of the same image.
  </p>
  <ol>
   <li value="1">
    Start IDL. Windows users can select
    <![CDATA[ ]]>
    <b>
     Start &gt; All Programs &gt; ENVI x.x &gt; IDL
    </b>
    .
   </li>
   <li value="2">
    Type the following command at the IDL command line to start the
    <span class="DocumentTitleProductName">
     ENVI
    </span>
    application with two vertical views:
   </li>
   <p class="Code">
    IDL&gt;
    <b>
     e = ENVI(LAYOUT=[2,1])
    </b>
   </p>
   <li value="3">
    Read an image file (a
    <i>
     raster
    </i>
    ) into ENVI. The first command locates the file in the ENVI distribution. The second command applies the
    <a href="ENVI__OpenRaster.htm">
     OpenRaster method
    </a>
    to the
    <a href="ENVI.htm">
     ENVI object class
    </a>
    (
    <code>
     e
    </code>
    ) and passes the file reference to the variable
    <code>
     raster1
    </code>
    , which is the
    <a href="enviRaster.htm">
     ENVIRaster object class
    </a>
    .
   </li>
   <p class="Code">
    ENVI&gt;
    <b>
     file1 = FILEPATH('qb_boulder_msi', ROOT_DIR=e.ROOT_DIR, SUBDIRECTORY = ['data'])
    </b>
   </p>
   <p class="Code">
    &#160;
   </p>
   <p class="Code">
    ENVI&gt;
    <b>
     raster1 = e.OpenRaster(file1)
    </b>
   </p>
   <p>
    You can now apply different methods to the ENVIRaster object class, such as closing it, saving it to a new file, or retrieving data from it. The ENVIRaster object also contains
    <i>
     properties
    </i>
    such as the number of bands, number of columns and rows, data type, interleave type, etc.
   </p>
   <li value="4">
    View the various properties of this raster object:
   </li>
   <p class="Code">
    ENVI&gt; PRINT
    <b>
     , raster1
    </b>
   </p>
   <p>
    Result:
   </p>
   <p class="Code">
    ENVIRASTER &lt;153345&gt;
   </p>
   <p class="Code_Indented">
    AUXILIARY_SPATIALREF      = !NULL
   </p>
   <p class="Code_Indented">
    AUXILIARY_URI             = 'C:\Program Files\Exelis\envixx\data\qb_boulder_msi.hdr', 'C:\Program Files\Exelis\envixx\data\qb_boulder_msi.enp'
   </p>
   <p class="Code_Indented">
    DATA_TYPE                 = 'uint'
   </p>
   <p class="Code_Indented">
    INTERLEAVE                = 'bsq'
   </p>
   <p class="Code_Indented">
    METADATA                  = &lt;ObjHeapVar153361(ENVIRASTERMETADATA)&gt;
   </p>
   <p class="Code_Indented">
    NBANDS                    = 4
   </p>
   <p class="Code_Indented">
    NCOLUMNS                  = 1024
   </p>
   <p class="Code_Indented">
    NROWS                     = 1024
   </p>
   <p class="Code_Indented">
    PYRAMID_EXISTS            = 1
   </p>
   <p class="Code_Indented">
    READ_ONLY                 = 1
   </p>
   <p class="Code_Indented">
    SPATIALREF                = &lt;ObjHeapVar153362(ENVIRASTERSPATIALREFSTANDARD)&gt;
   </p>
   <p class="Code_Indented">
    URI                       = 'C:\Program Files\Exelis\envixx\data\qb_boulder_msi'
   </p>
   <p>
    Next, you will create two different color combinations from this image and display them in the two separate views. Different color combinations are treated as separate
    <i>
     layers
    </i>
    in ENVI, so you need to define each layer and specify which views will contain them.
   </p>
   <li value="5">
    Use the
    <a href="ENVI__GetView.htm">
     GetView method
    </a>
    with the ALL keyword to return a reference to the two views that you created in Step 1. The views are stored in an
    <a href="enviView.htm">
     ENVIView object class
    </a>
    called
    <code>
     views
    </code>
    , which is a 2-element array.
   </li>
   <p class="Code">
    ENVI&gt;
    <b>
     views = e.GetView(/ALL)
    </b>
   </p>
   <li value="6">
    Type the following to see the properties of each view:
   </li>
   <p class="Code">
    ENVI&gt;
    <b>
     PRINT, views[0]
    </b>
   </p>
   <p>
    Result:
   </p>
   <p class="Code">
    ENVIVIEW &lt;153363&gt;
   </p>
   <p class="Code_Indented">
    SCALE                     = 3413.3335
   </p>
   <p class="Code_Indented">
    SHOW_OVERVIEW             = 0
   </p>
   <p class="Code_Indented">
    SHOW_SNAIL_TRAIL          = 1
   </p>
   <p class="Code_Indented">
    ZOOM_VALUE                = 1
   </p>
   <p class="Code_Indented">
    &#160;
   </p>
   <p class="Code">
    ENVI&gt;
    <b>
     PRINT, views[1]
    </b>
   </p>
   <p>
    Result:
   </p>
   <p class="Code">
    ENVIVIEW &lt;153364&gt;
   </p>
   <p class="Code_Indented">
    SCALE                     = 3413.3335
   </p>
   <p class="Code_Indented">
    SHOW_OVERVIEW             = 0
   </p>
   <p class="Code_Indented">
    SHOW_SNAIL_TRAIL          = 1
   </p>
   <p class="Code_Indented">
    ZOOM_VALUE                = 1.0000000
   </p>
   <li value="7">
    Create a true-color layer using the
    <a href="enviView__CreateLayer.htm">
     CreateLayer method
    </a>
    , and load it into the first view:
   </li>
   <p class="Code">
    ENVI&gt;
    <b>
     layer1 = views[0].CreateLayer(raster1)
    </b>
   </p>
   <p>
    The layer named
    <code>
     layer1
    </code>
    is an
    <a href="enviRasterLayer.htm">
     ENVIRasterLayer object
    </a>
    that you can close or rearrange relative to other layers, if desired.
   </p>
   <li value="8">
    Create a color-infrared layer using the CIR keyword, and load it into the second view:
   </li>
   <p class="Code">
    ENVI&gt;
    <b>
     layer2 = views[1].CreateLayer(raster1, /CIR)
    </b>
   </p>
  </ol>
  <h3>
   Example 2: Use GetView and CreateView to define views
  </h3>
  <p>
   Instead of using the LAYOUT keyword to the ENVI object class, you can define multiple views using the
   <a href="ENVI__GetView.htm">
    GetView
   </a>
   and
   <a href="ENVI__CreateView.htm">
    CreateView
   </a>
   methods. This example takes you through the same process as before, but using slightly different steps.
  </p>
  <ol>
   <li value="1">
    Reset the IDL session to close ENVI and start over:
   </li>
   <p class="Code">
    ENVI&gt;
    <b>
     .reset
    </b>
   </p>
   <li value="2">
    Restart the
    <span class="DocumentTitleProductName">
     ENVI
    </span>
    application:
   </li>
   <p class="Code">
    IDL&gt;
    <b>
     e = ENVI()
    </b>
   </p>
   <li value="3">
    Read an image file into ENVI:
   </li>
   <p class="Code">
    ENVI&gt;
    <b>
     file1 = FILEPATH('qb_boulder_msi', ROOT_DIR=e.ROOT_DIR SUBDIRECTORY = ['data'])
    </b>
   </p>
   <p class="Code">
    &#160;
   </p>
   <p class="Code">
    ENVI&gt;
    <b>
     raster1 = e.OpenRaster(file1)
    </b>
   </p>
   <li value="4">
    Use GetView to return a reference to the default (single) view:
   </li>
   <p class="Code">
    ENVI&gt;
    <b>
     view1 = e.GetView()
    </b>
   </p>
   <li value="5">
    Use the CreateView method to create a second view:
   </li>
   <p class="Code">
    ENVI&gt;
    <b>
     view2 = e.CreateView()
    </b>
   </p>
   <li value="6">
    Populate the first view with a true-color layer:
   </li>
   <p class="Code">
    ENVI&gt;
    <b>
     layer1 = view1.CreateLayer(raster1)
    </b>
   </p>
   <li value="7">
    Populate the second view with a color-infrared layer:
   </li>
   <p class="Code">
    ENVI&gt;
    <b>
     layer2 = view2.CreateLayer(raster1, /CIR)
    </b>
   </p>
  </ol>
  <h3>
   Example 3: Geographically link and explore the images
  </h3>
  <p>
   Now that you have two views of the same image, you can geographically link them so that both images move at the same time when you pan them.
  </p>
  <ol>
   <li value="1">
    Geographically link the second view to the first one, using the
    <a href="ENVIView__GeoLink.htm">
     GeoLink method
    </a>
    :
   </li>
   <p class="Code">
    ENVI&gt;
    <b>
     view1.GeoLink, view2
    </b>
   </p>
   <li value="2">
    Center both images over a large lake, using the
    <a href="ENVIView__GoToLocation.htm">
     GoToLocation method
    </a>
    :
   </li>
   <p class="Code">
    ENVI&gt;
    <b>
     view1.GoToLocation, -105.2062514D, 39.9974865D, /GEO
    </b>
    <![CDATA[ ]]>
   </p>
   <li value="3">
    Pan by 100 pixels in the x and y direction:
   </li>
   <p class="Code">
    ENVI&gt;
    <b>
     view1.Pan, 100, 100
    </b>
   </p>
   <li value="4">
    When you are finished exploring the images, close ENVI and IDL:
   </li>
   <p class="Code">
    ENVI&gt;
    <b>
     exit
    </b>
   </p>
  </ol>
  <div class="mp_footer">
   Copyright ©
   <span class="DocumentTitleCopyrightYear">
    2012
   </span>
   <![CDATA[ ]]>
   <span class="DocumentTitleCopyrightCompanyName">
    Exelis Visual Information Solutions, Inc.
   </span>
   All Rights Reserved.
  </div>
  <script type="text/javascript" src="../SkinSupport/MadCapBodyEnd.js">
  </script>
 </body>
</html>