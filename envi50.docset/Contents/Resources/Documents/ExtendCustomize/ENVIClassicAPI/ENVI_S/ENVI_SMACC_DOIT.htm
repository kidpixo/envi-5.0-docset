<?xml version='1.0' encoding='utf-8'?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns:madcap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" madcap:lastblockdepth="2" madcap:lastheight="135.6667" madcap:lastwidth="592" madcap:disablemasterstylesheet="true" madcap:tocpath="" madcap:medium="non-print" madcap:inpreviewmode="false" madcap:preloadimages="false" madcap:runtimefiletype="Topic" madcap:targettype="WebHelp" lang="en-us" xml:lang="en-us" madcap:pathtohelpsystem="../../../../" madcap:helpsystemfilename="ENVIHelp.xml" madcap:searchtype="Stem">
 <!-- saved from url=(0014)about:internet -->
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>
   ENVI_SMACC_DOIT
  </title>
  <link href="../../../SkinSupport/MadCap.css" rel="stylesheet" />
  <link href="../../../Resources/Stylesheets/Doc_Style.css" rel="stylesheet" />
  <script src="../../../SkinSupport/MadCapAll.js" type="text/javascript">
  </script>
 </head>
 <body>
  <p class="MCWebHelpFramesetLink" style="display: none;">
   <a href="../../../../ENVIHelp_CSH.htm#ExtendCustomize/ENVIClassicAPI/ENVI_S/ENVI_SMACC_DOIT.htm" style="">
    Open topic with navigation
   </a>
  </p>
  <h1>
   <a name="kanchor814">
   </a>
   ENVI_SMACC_DOIT
  </h1>
  <p>
   The ENVI_SMACC_DOIT procedure performs Sequential Maximum Angle Convex Cone (SMACC) processing on an input file. This procedure is designed for use with previously calibrated hyperspectral data or multispectral data.
  </p>
  <p>
   This procedure applies the SMACC process to a radiance- or reflectance-calibrated hyperspectral image, and it returns the following outputs:
  </p>
  <ul>
   <li value="1">
    A spectral library of derived endmembers
   </li>
   <li value="2">
    An abundance image with N_ENDMEMBERS number of bands. This is an optional output.
   </li>
   <li value="3">
    ROIs representing the set of endmembers. This is an optional output.
   </li>
  </ul>
  <h2 class="API">
   <a name="Syntax">
   </a>
   Syntax
  </h2>
  <p>
   ENVI_DOIT, 'ENVI_SMACC_DOIT' [, /
   <a href="#ABUND_IN_MEMORY">
    ABUND_IN_MEMORY
   </a>
   ] [,
   <a href="#ABUND_NAME">
    ABUND_NAME
   </a>
   =
   <i>
    string
   </i>
   ] [,
   <a href="#ABUND_R_FID">
    ABUND_R_FID
   </a>
   =
   <i>
    variable
   </i>
   ] [,
   <a href="#COALESCE">
    COALESCE
   </a>
   =
   <i>
    value
   </i>
   ] ,
   <a href="#DIMS">
    DIMS
   </a>
   =
   <i>
    array
   </i>
   ,
   <a href="#FID">
    FID
   </a>
   =
   <i>
    file ID
   </i>
   , /
   <a href="#IN_MEMORY">
    IN_MEMORY
   </a>
   [,
   <a href="#M_FID">
    M_FID
   </a>
   =
   <i>
    file ID
   </i>
   ] [,
   <a href="#M_POS">
    M_POS
   </a>
   =
   <i>
    integer
   </i>
   ], [,
   <a href="#METHOD">
    METHOD
   </a>
   ={0 | 1 | 2}],
   <a href="#N_ENDMEMBERS">
    N_ENDMEMBERS
   </a>
   =
   <i>
    integer
   </i>
   ,
   <a href="#OUT_NAME">
    OUT_NAME
   </a>
   =
   <i>
    string
   </i>
   [,
   <a href="#PLOT_FLAG">
    PLOT_FLAG
   </a>
   =
   <i>
    bitwise operator
   </i>
   ],
   <a href="#POS">
    POS
   </a>
   =
   <i>
    array
   </i>
   ,
   <a href="#R_FID">
    R_FID
   </a>
   =
   <i>
    variable
   </i>
   [,
   <a href="#ROI_NAME">
    ROI_NAME
   </a>
   =
   <i>
    string
   </i>
   ] [,
   <a href="#THRESH">
    THRESH
   </a>
   =
   <i>
    value
   </i>
   ]
  </p>
  <h2 class="API">
   <a name="Keywords">
   </a>
   Keywords
  </h2>
  <h3>
   <a name="ABUND_IN_MEMORY">
   </a>
   ABUND_IN_MEMORY (optional)
  </h3>
  <p>
   Set this keyword to generate an abundance image and save it in memory only. If you do not set ABUND_IN_MEMORY and you specify a filename for ABUND_NAME, the abundance image is generated and stored on disk.
  </p>
  <h3>
   <a name="ABUND_NAME">
   </a>
   ABUND_NAME (optional)
  </h3>
  <p>
   Use this keyword to specify a filename for the abundance image output. If you specify a filename for this keyword, an abundance image is generated and saved to a file with the filename. If you do not use ABUND_NAME and you set ABUND_IN_MEMORY, an abundance image is generated and stored in memory.
  </p>
  <h3>
   <a name="ABUND_R_FID">
   </a>
   ABUND_R_FID (optional)
  </h3>
  <p>
   Set this keyword to a named variable that contains the file ID of the output abundance image. This image is only generated if you specify either the ABUND_IN_MEMORY or ABUND_NAME keywords. If you specify neither keyword, an abundance image is not generated, and a value of –1 is returned for ABUND_R_FID.
  </p>
  <h3>
   <a name="COALESCE">
   </a>
   COALESCE
  </h3>
  <p>
   Use this keyword to specify the maximum Spectral Angle Mapper (SAM) threshold value above which endmember spectra are considered unique. The default value is 0.0.
  </p>
  <h3>
   <a name="DIMS">
   </a>
   DIMS
  </h3>
  <p>
   The “dimensions” keyword is a five-element array of long integers that defines the spatial subset (of a file or array) to use for processing. Nearly every time you specify the keyword FID, you must also specify the spatial subset of the corresponding file (even if the entire file, with no spatial subsetting, is to be processed).
  </p>
  <ul>
   <li value="1">
    DIMS[0]: A pointer to an open ROI; use only in cases where ROIs define the spatial subset. Otherwise, set to -1L.
   </li>
   <li value="2">
    DIMS[1]: The starting sample number. The first x pixel is 0.
   </li>
   <li value="3">
    DIMS[2]: The ending sample number
   </li>
   <li value="4">
    DIMS[3]: The starting line number. The first y pixel is 0.
   </li>
   <li value="5">
    DIMS[4]: The ending line number
   </li>
  </ul>
  <p>
   To process an entire file (with no spatial subsetting), define DIMS as shown in the following code example. This example assumes you have already opened a file using
   <a href="ENVI_SELECT.htm">
    ENVI_SELECT
   </a>
   or
   <a href="../ENVI_P/ENVI_PICKFILE.htm">
    ENVI_PICKFILE
   </a>
   :
  </p>
  <p class="Code_Indented">
   envi_file_query, fid, dims=dims
  </p>
  <p>
   You
   <i>
    cannot
   </i>
   define DIMS as a pointer to a region of interest (ROI) in any of
   <span class="DocumentTitleProductName">
    ENVI
   </span>
   ’s _DOIT library routines. Using the following example code with a _DOIT library routine will result in an error message when you run the program:
  </p>
  <p class="Code_Indented">
   roi_ids = ENVI_GET_ROI_IDS()
  </p>
  <p class="Code_Indented">
   <br />
   roi_dims = ENVI_GET_ROI_DIMS_PTR(roi_ids[0])
  </p>
  <p class="Code_Indented">
   <br />
   dims= [roi_dims,0,0,0,0]
  </p>
  <h3>
   <a name="FID">
   </a>
   FID
  </h3>
  <p>
   The file ID (FID) is a long-integer scalar with a value greater than 0. An invalid FID has a value of -1. The FID is provided as a named variable by any routine used to open or select a file. Often, the FID is returned from the keyword R_FID in the
   <a href="../../ENVIRasterToFID.htm">
    ENVIRasterToFID
   </a>
   routine. Files are processed by referring to their FIDs. If you work directly with the file in IDL, the FID is
   <i>
    not
   </i>
   equivalent to a logical unit number (LUN).
  </p>
  <h3>
   <a name="IN_MEMORY">
   </a>
   IN_MEMORY
  </h3>
  <p>
   Set this keyword to specify that output should be stored in memory. If you do not set IN_MEMORY, output will be stored on disk and you must specify OUT_NAME (see below).
  </p>
  <h3>
   <a name="M_FID">
   </a>
   M_FID (optional)
  </h3>
  <p>
   Use this keyword to specify the file ID of the mask file. This value is returned from the keyword R_FID in the
   <a href="../ENVI_O/ENVI_OPEN_FILE.htm">
    ENVI_OPEN_FILE
   </a>
   procedure. M_FID is a long integer with a value greater than 0. An invalid file ID has a value of -1.
  </p>
  <h3>
   <a name="M_POS">
   </a>
   M_POS (optional)
  </h3>
  <p>
   Use this keyword to specify the band position of the mask band. M_POS is a long integer with a value greater than or equal to 0.
  </p>
  <h3>
   <a name="METHOD">
   </a>
   METHOD
  </h3>
  <p>
   Use this keyword to specify an integer value that indicates the unmixing constraint for the SMACC method. The following list shows the integer values that represent each possible constraint and their related conditions.
  </p>
  <ul>
   <li value="1">
    0: Positivity only (default). Inputs should be calibrated to reflectance.
   </li>
   <li value="2">
    1: Sum to unity or less. Inputs should be calibrated to reflectance.
   </li>
   <li value="3">
    2: Sum to unity. Inputs should be calibrated to radiance or thermal IR emissivity.
   </li>
  </ul>
  <p>
   All of these options also impose a positivity constraint. In the unmixing model, negative fractional abundances are not allowed and are set to 0.
  </p>
  <p>
   If you specify METHOD=0 or 1, the SMACC method begins with an endmember value of 1.0 (total reflectance). If you specify METHOD=2, the SMACC method begins with an endmember value of 0.0 (zero radiance). Regardless, both of these endmembers are presumed to lie at an extreme point (or even outside) of a plausible convex hull. This point becomes a reasonable baseline for the SMACC method.
  </p>
  <h3>
   <a name="N_ENDMEMBERS">
   </a>
   N_ENDMEMBERS
  </h3>
  <p>
   Use this keyword to specify the maximum number of desired endmembers.
  </p>
  <h3>
   <a name="OUT_NAME">
   </a>
   OUT_NAME
  </h3>
  <p>
   Use this keyword to specify a string with the output filename for the resulting data. If you set the keyword IN_MEMORY, you do not need to specify OUT_NAME.
  </p>
  <h3>
   <a name="PLOT_FLAG">
   </a>
   PLOT_FLAG (optional)
  </h3>
  <p>
   Use this keyword to specify an integer value that determines which resulting plot window is provided.
  </p>
  <ul>
   <li value="1">
    0: The endmember and residual error plots are not displayed (default).
   </li>
   <li value="2">
    1: The endmember plot is displayed.
   </li>
   <li value="3">
    2: The residual error plot is displayed.
   </li>
   <li value="4">
    3: Both plot windows are displayed.
    <br />
   </li>
  </ul>
  <h3>
   <a name="POS">
   </a>
   POS
  </h3>
  <p>
   Use this keyword to specify an array of band positions, indicating the band numbers on which to perform the operation. This keyword indicates the spectral subset of bands to use in processing. POS is an array of long integers, ranging from 0 to the number of bands minus 1. Specify bands starting with zero (Band 1=0, Band 2=1, etc.) For example, to process only Bands 3 and 4 of a multi-band file, POS=[2, 3].
  </p>
  <p>
   POS is typically used with individual files. The example code below for
   <a href="ENVI_STATS_DOIT.htm">
    ENVI_STATS_DOIT
   </a>
   illustrates the use of POS for a single file with four bands of data:
  </p>
  <p class="Code_Indented">
   pos=[0,1,2,3]
  </p>
  <p class="Code_Indented">
   <br />
   envi_doit, 'envi_stats_doit', dims=dims, fid=fid, pos=pos, $
  </p>
  <p class="Code_Indented">
   <br />
   comp_flag=3, dmin=dmin, dmax=dmax, mean=mean, stdv=stdv, hist=hist
  </p>
  <p>
   But what if you need to create an output file consisting of data from different bands, each from different files? Library routines such as
   <a href="../C/CF_DOIT.htm">
    CF_DOIT
   </a>
   and
   <a href="../ENVI_L/ENVI_LAYER_STACKING_DOIT.htm">
    ENVI_LAYER_STACKING_DOIT
   </a>
   can accomplish this, but they use the POS keyword differently. Suppose you have four files,
   <code>
    test1
   </code>
   ,
   <code>
    test2
   </code>
   ,
   <code>
    test3
   </code>
   , and
   <code>
    test4
   </code>
   , with corresponding FIDs of
   <code>
    fid1
   </code>
   ,
   <code>
    fid2
   </code>
   ,
   <code>
    fid3
   </code>
   , and
   <code>
    fid4
   </code>
   , respectively. In the following example, you want Band 3 from
   <code>
    test1
   </code>
   in the first position, Band 2 from
   <code>
    test2
   </code>
   in the second position, Band 6 from
   <code>
    test3
   </code>
   in the third position, and Band 4 from
   <code>
    test4
   </code>
   in the fourth position. The code should be as follows:
  </p>
  <p class="Code_Indented">
   fid_array = [fid1,fid2,fid3,fid4]
  </p>
  <p class="Code_Indented">
   <br />
   pos=[2,1,5,3]
  </p>
  <p class="Code_Indented">
   <br />
   envi_doit, 'cf_doit', dims=dims, fid=fid_array
  </p>
  <p class="Code_Indented">
   <br />
   out_name='test_composite_file'
  </p>
  <h3>
   <a name="R_FID">
   </a>
   R_FID
  </h3>
  <p>
   <span class="DocumentTitleProductNameENVIClassic">
    ENVI Classic
   </span>
   library routines that result in new images also have an R_FID, or “returned FID.” This is simply a named variable containing the file ID to access the processed data. Specifying this keyword saves you the step of opening the new file from disk.
  </p>
  <h3>
   <a name="ROI_NAME">
   </a>
   ROI_NAME (optional)
  </h3>
  <p>
   Use this keyword to generate ROIs and to specify the name of the file that contains these ROIs. The generated ROIs contain the endmember pixels. If you do not set this keyword, the ROIs are not generated.
  </p>
  <h3>
   <a name="THRESH">
   </a>
   THRESH (optional)
  </h3>
  <p>
   Use this keyword to specify the residual RMS error threshold at which the SMACC process is terminated.
  </p>
  <p class="Note" madcap:autonum="&lt;b&gt;Note: &lt;/b&gt;">
   <span class="autonumber">
    <span>
     <b>
      Note:
     </b>
    </span>
   </span>
   Data units should be considered when choosing the tolerance. For example, RMS errors for reflectance units should be lower than for radiance units.
  </p>
  <div class="mp_footer">
   Copyright ©
   <span class="DocumentTitleCopyrightYear">
    2012
   </span>
   <![CDATA[ ]]>
   <span class="DocumentTitleCopyrightCompanyName">
    Exelis Visual Information Solutions, Inc.
   </span>
   All Rights Reserved.
  </div>
  <script type="text/javascript" src="../../../SkinSupport/MadCapBodyEnd.js">
  </script>
 </body>
</html>