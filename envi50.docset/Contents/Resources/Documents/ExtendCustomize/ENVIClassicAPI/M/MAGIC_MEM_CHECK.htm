<?xml version='1.0' encoding='utf-8'?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns:madcap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" madcap:lastblockdepth="2" madcap:lastheight="135.6667" madcap:lastwidth="592" madcap:disablemasterstylesheet="true" madcap:tocpath="" madcap:medium="non-print" madcap:inpreviewmode="false" madcap:preloadimages="false" madcap:runtimefiletype="Topic" madcap:targettype="WebHelp" lang="en-us" xml:lang="en-us" madcap:pathtohelpsystem="../../../../" madcap:helpsystemfilename="ENVIHelp.xml" madcap:searchtype="Stem">
 <!-- saved from url=(0014)about:internet -->
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>
   MAGIC_MEM_CHECK
  </title>
  <link href="../../../SkinSupport/MadCap.css" rel="stylesheet" />
  <link href="../../../Resources/Stylesheets/Doc_Style.css" rel="stylesheet" />
  <script src="../../../SkinSupport/MadCapAll.js" type="text/javascript">
  </script>
 </head>
 <body>
  <p class="MCWebHelpFramesetLink" style="display: none;">
   <a href="../../../../ENVIHelp_CSH.htm#ExtendCustomize/ENVIClassicAPI/M/MAGIC_MEM_CHECK.htm" style="">
    Open topic with navigation
   </a>
  </p>
  <h1>
   <a name="kanchor816">
   </a>
   MAGIC_MEM_CHECK
  </h1>
  <p>
   <a href="#Syntax">
    Syntax
   </a>
   |
   <a href="#Keywords">
    Keywords
   </a>
   |
   <a href="#Example">
    Example
   </a>
  </p>
  <p class="HighlightText">
   This routine is obsolete and should not be used in
   <span class="DocumentTitleProductName">
    ENVI
   </span>
   application programming interface (API) code.
  </p>
  <p>
   MAGIC_MEM_CHECK is a memory management function. It should always be called before the processing function. It returns a structure containing the tags IN_MEMORY and OUT_NAME, which are then passed to the processing function (_DOIT).
  </p>
  <h2 class="API">
   <a name="Syntax">
   </a>
   Syntax
  </h2>
  <p>
   <i>
    Result
   </i>
   = MAGIC_MEM_CHECK(
   <a href="#DIMS">
    DIMS
   </a>
   =
   <i>
    array
   </i>
   ,
   <a href="#FID">
    FID
   </a>
   =
   <i>
    file ID
   </i>
   , /
   <a href="#IN_MEMORY">
    IN_MEMORY
   </a>
   ,
   <a href="#NB">
    NB
   </a>
   =
   <i>
    integer
   </i>
   ,
   <a href="#OUT_NAME">
    OUT_NAME
   </a>
   =
   <i>
    value
   </i>
   ,
   <a href="#OUT_DT">
    OUT_DT
   </a>
   ={1 | 2 | 3 | 4 | 5 | 6 | 9 | 12 | 13 | 14 | 15})
  </p>
  <h2 class="API">
   <a name="Keywords">
   </a>
   Keywords
  </h2>
  <h3>
   <a name="DIMS">
   </a>
   DIMS
  </h3>
  <p>
   The “dimensions” keyword is a five-element array of long integers that defines the spatial subset (of a file or array) to use for processing. Nearly every time you specify the keyword FID, you must also specify the spatial subset of the corresponding file (even if the entire file, with no spatial subsetting, is to be processed).
  </p>
  <ul>
   <li value="1">
    DIMS[0]: A pointer to an open ROI; use only in cases where ROIs define the spatial subset. Otherwise, set to -1L.
   </li>
   <li value="2">
    DIMS[1]: The starting sample number. The first x pixel is 0.
   </li>
   <li value="3">
    DIMS[2]: The ending sample number
   </li>
   <li value="4">
    DIMS[3]: The starting line number. The first y pixel is 0.
   </li>
   <li value="5">
    DIMS[4]: The ending line number
   </li>
  </ul>
  <p>
   To process an entire file (with no spatial subsetting), define DIMS as shown in the following code example. This example assumes you have already opened a file using
   <a href="../ENVI_S/ENVI_SELECT.htm">
    ENVI_SELECT
   </a>
   or
   <a href="../ENVI_P/ENVI_PICKFILE.htm">
    ENVI_PICKFILE
   </a>
   :
  </p>
  <p class="Code_Indented">
   envi_file_query, fid, dims=dims
  </p>
  <p>
   You
   <i>
    cannot
   </i>
   define DIMS as a pointer to a region of interest (ROI) in any of
   <span class="DocumentTitleProductName">
    ENVI
   </span>
   ’s _DOIT library routines. Using the following example code with a _DOIT library routine will result in an error message when you run the program:
  </p>
  <p class="Code_Indented">
   roi_ids = ENVI_GET_ROI_IDS()
  </p>
  <p class="Code_Indented">
   <br />
   roi_dims = ENVI_GET_ROI_DIMS_PTR(roi_ids[0])
  </p>
  <p class="Code_Indented">
   <br />
   dims= [roi_dims,0,0,0,0]
  </p>
  <h3>
   <a name="FID">
   </a>
   FID
  </h3>
  <p>
   The file ID (FID) is a long-integer scalar with a value greater than 0. An invalid FID has a value of -1. The FID is provided as a named variable by any routine used to open or select a file. Often, the FID is returned from the keyword R_FID in the
   <a href="../../ENVIRasterToFID.htm">
    ENVIRasterToFID
   </a>
   routine. Files are processed by referring to their FIDs. If you work directly with the file in IDL, the FID is
   <i>
    not
   </i>
   equivalent to a logical unit number (LUN).
  </p>
  <h3>
   <a name="IN_MEMORY">
   </a>
   IN_MEMORY
  </h3>
  <p>
   Set this keyword to specify that output should be stored in memory. If you do not set IN_MEMORY, output will be stored on disk and you must specify OUT_NAME (see below).
  </p>
  <h3>
   <a name="NB">
   </a>
   NB
  </h3>
  <p>
   Use this keyword to specify the number of bands in the output image.
  </p>
  <h3>
   <a name="OUT_NAME">
   </a>
   OUT_NAME
  </h3>
  <p>
   Use this keyword to specify a string with the output filename for the resulting data. If you set the keyword IN_MEMORY, you do not need to specify OUT_NAME.
  </p>
  <h3>
   <a name="OUT_DT">
   </a>
   OUT_DT
  </h3>
  <p>
   This keyword indicates the IDL data type of the output data. Set the keyword to one of the following integer values:
  </p>
  <ul>
   <li value="1">
    1: Byte (8 bits)
   </li>
   <li value="2">
    2: Integer (16 bits)
   </li>
   <li value="3">
    3: Long integer (32 bits)
   </li>
   <li value="4">
    4: Floating-point (32 bits)
   </li>
   <li value="5">
    5: Double-precision floating-point (64 bits)
   </li>
   <li value="6">
    6: Complex (2x32 bits)
   </li>
   <li value="7">
    9: Double-precision complex (2x64 bits)
   </li>
   <li value="8">
    12: Unsigned integer (16 bits)
   </li>
   <li value="9">
    13: Unsigned long integer (32 bits)
   </li>
   <li value="10">
    14: Long 64-bit integer
   </li>
   <li value="11">
    15: Unsigned long 64-bit integer
   </li>
  </ul>
  <h2 class="API">
   <a name="Example">
   </a>
   Example
  </h2>
  <p>
   After obtaining the processing parameters, call MAGIC_MEM_CHECK to ensure that in-memory items do not exceed the total cache size. After calling MAGIC_MEM_CHECK, use the values stored in M_RES.IN_MEMORY and M_RES.OUT_NAME for the in-memory processing flag or the output filename. if M_RES.CANCEL is set, then you have canceled the operation.
  </p>
  <p class="Code">
   m_res=magic_mem_check(fid=fid,dims=dims, out_dt=1,$
  </p>
  <p class="Code_Indented">
   nb=n_elements(pos), out_name=result.outf.name,$
  </p>
  <p class="Code_Indented">
   in_memory=result.outf.in_memory)
  </p>
  <p class="Code">
   if (m_res.cancel) then return
  </p>
  <p class="Code">
   in_memory = m_res.in_memory
  </p>
  <p class="Code">
   out_name = m_res.out_name
  </p>
  <div class="mp_footer">
   Copyright ©
   <span class="DocumentTitleCopyrightYear">
    2012
   </span>
   <![CDATA[ ]]>
   <span class="DocumentTitleCopyrightCompanyName">
    Exelis Visual Information Solutions, Inc.
   </span>
   All Rights Reserved.
  </div>
  <script type="text/javascript" src="../../../SkinSupport/MadCapBodyEnd.js">
  </script>
 </body>
</html>