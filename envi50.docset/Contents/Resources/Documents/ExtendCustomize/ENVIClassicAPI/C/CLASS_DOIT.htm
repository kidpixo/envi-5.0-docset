<?xml version='1.0' encoding='utf-8'?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns:madcap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" madcap:lastblockdepth="2" madcap:lastheight="135.6667" madcap:lastwidth="592" madcap:disablemasterstylesheet="true" madcap:tocpath="Programming|Routines|Processing" madcap:medium="non-print" madcap:inpreviewmode="false" madcap:preloadimages="false" madcap:runtimefiletype="Topic" madcap:targettype="WebHelp" lang="en-us" xml:lang="en-us" madcap:pathtohelpsystem="../../../../" madcap:helpsystemfilename="ENVIHelp.xml" madcap:searchtype="Stem">
 <!-- saved from url=(0014)about:internet -->
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>
   CLASS_DOIT
  </title>
  <link href="../../../SkinSupport/MadCap.css" rel="stylesheet" />
  <link href="../../../Resources/Stylesheets/Doc_Style.css" rel="stylesheet" />
  <script src="../../../SkinSupport/MadCapAll.js" type="text/javascript">
  </script>
 </head>
 <body>
  <p class="MCWebHelpFramesetLink" style="display: none;">
   <a href="../../../../ENVIHelp_CSH.htm#ExtendCustomize/ENVIClassicAPI/C/CLASS_DOIT.htm" style="">
    Open topic with navigation
   </a>
  </p>
  <div class="MCBreadcrumbsBox_0">
   <span class="MCBreadcrumbsPrefix">
    <![CDATA[ ]]>
   </span>
   <a class="MCBreadcrumbsLink" href="../../ProgrammingWithENVI.htm">
    Programming
   </a>
   <span class="MCBreadcrumbsDivider">
    &gt;
   </span>
   <a class="MCBreadcrumbsLink" href="../../Routines.htm">
    Routines
   </a>
   <span class="MCBreadcrumbsDivider">
    &gt;
   </span>
   <a class="MCBreadcrumbsLink" href="../A/ADAPT_FILT_DOIT.htm">
    Processing
   </a>
   <span class="MCBreadcrumbsDivider">
    &gt;
   </span>
   <span class="MCBreadcrumbs">
    CLASS_DOIT
   </span>
  </div>
  <h1>
   <a name="kanchor679">
   </a>
   CLASS_DOIT
  </h1>
  <p>
   Use this procedure to perform supervised classification using the parallelepiped, minimum distance, maximum likelihood, Spectral Angle Mapper (SAM), Spectral Information Divergence (SID), Mahalanobis, or Binary Encoding methods, or unsupervised classification using ISODATA or K-Means. All classification methods use a combination of common keywords and those for specific classification methods. The METHOD keyword is used to select the supervised or unsupervised classification technique.
  </p>
  <h2 class="API">
   <a name="Syntax">
   </a>
   Syntax
  </h2>
  <p>
   ENVI_DOIT, 'CLASS_DOIT',
   <a href="#CLASS_NAMES">
    CLASS_NAMES
   </a>
   =
   <i>
    string array
   </i>
   ,
   <a href="#DIMS">
    DIMS
   </a>
   =
   <i>
    array
   </i>
   ,
   <a href="#FID">
    FID
   </a>
   =
   <i>
    file ID
   </i>
   , /
   <a href="#IN_MEMORY">
    IN_MEMORY
   </a>
   ,
   <a href="#LOOKUP">
    LOOKUP
   </a>
   =
   <i>
    array
   </i>
   [,
   <a href="#M_FID">
    M_FID
   </a>
   =
   <i>
    file ID
   </i>
   ] [,
   <a href="#M_POS">
    M_POS
   </a>
   =
   <i>
    value
   </i>
   ],
   <a href="#METHOD">
    METHOD
   </a>
   ={0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8} [,
   <a href="#OUT_BNAME">
    OUT_BNAME
   </a>
   =
   <i>
    string
   </i>
   ],
   <a href="#OUT_NAME">
    OUT_NAME
   </a>
   =
   <i>
    string
   </i>
   ,
   <a href="#POS">
    POS
   </a>
   =
   <i>
    array
   </i>
   [,
   <a href="#R_FID">
    R_FID
   </a>
   =
   <i>
    variable
   </i>
   ]
  </p>
  <p>
   <b>
    Keywords for any supervised classification method:
   </b>
  </p>
  <p>
   <a href="#MEAN_supervised">
    MEAN
   </a>
   =
   <i>
    array
   </i>
   [,
   <a href="#RULE_FID_supervised">
    RULE_FID
   </a>
   =
   <i>
    file ID
   </i>
   ] [, /
   <a href="#RULE_IN_MEMORY_supervised">
    RULE_IN_MEMORY
   </a>
   ] [,
   <a href="#RULE_OUT_BNAME_supervised">
    RULE_OUT_BNAME
   </a>
   =
   <i>
    string array
   </i>
   ] [,
   <a href="#RULE_OUT_NAME_supervised">
    RULE_OUT_NAME
   </a>
   =
   <i>
    string
   </i>
   ]
  </p>
  <p>
   <b>
    Keywords for parallelepiped classification:
   </b>
  </p>
  <p>
   <a href="#STDV_parallel">
    STDV
   </a>
   =
   <i>
    array
   </i>
   [,
   <a href="#STD_MULT_parallel">
    STD_MULT
   </a>
   =
   <i>
    value
   </i>
   ]
  </p>
  <p>
   <b>
    Keywords for minimum distance classification:
   </b>
  </p>
  <p>
   [,
   <a href="#DATA_SCALE_minimum">
    DATA_SCALE
   </a>
   =
   <i>
    floating point
   </i>
   ],
   <a href="#STDV_minimum">
    STDV
   </a>
   =
   <i>
    array
   </i>
   [,
   <a href="#STD_MULT_minimum">
    STD_MULT
   </a>
   =
   <i>
    value
   </i>
   ] [,
   <a href="#THRESH_minimum">
    THRESH
   </a>
   =
   <i>
    value
   </i>
   ]
  </p>
  <p>
   <b>
    Keywords for maximum likelihood classification:
   </b>
  </p>
  <p>
   <a href="#COV_max">
    COV
   </a>
   =
   <i>
    array
   </i>
   ,
   <a href="#DATA_SCALE_max">
    DATA_SCALE
   </a>
   =
   <i>
    floating point
   </i>
   ,
   <a href="#STDV_max">
    STDV
   </a>
   =
   <i>
    array
   </i>
   [,
   <a href="#THRESH_max">
    THRESH
   </a>
   =
   <i>
    value
   </i>
   ]
  </p>
  <p>
   <b>
    Keywords for SAM classification:
   </b>
  </p>
  <p>
   [,
   <a href="#THRESH_sam">
    THRESH
   </a>
   =
   <i>
    value
   </i>
   ]
  </p>
  <p>
   <b>
    Keywords for SID classification:
   </b>
  </p>
  <p>
   [,
   <a href="#THRESH_sid">
    THRESH
   </a>
   =
   <i>
    value
   </i>
   ]
  </p>
  <p>
   <b>
    Keywords for Mahalanobis classification:
   </b>
  </p>
  <p>
   <a href="#COV_mah">
    COV
   </a>
   =
   <i>
    array
   </i>
   ,
   <a href="#NPTS_mah">
    NPTS
   </a>
   =
   <i>
    value
   </i>
   [,
   <a href="#THRESH_mah">
    THRESH
   </a>
   =
   <i>
    value
   </i>
   ]
  </p>
  <p>
   <b>
    Keywords for Binary Encoding classification:
   </b>
  </p>
  <p>
   [,
   <a href="#THRESH_binary">
    THRESH
   </a>
   =
   <i>
    value
   </i>
   ]
  </p>
  <p>
   <b>
    Keywords for any unsupervised classification method:
   </b>
  </p>
  <p>
   <a href="#ITERATIONS_unsup">
    ITERATIONS
   </a>
   =
   <i>
    integer
   </i>
   [,
   <a href="#STD_MULT_unsup">
    STD_MULT
   </a>
   =
   <i>
    floating point
   </i>
   ] [,
   <a href="#THRESH_unsup">
    THRESH
   </a>
   =
   <i>
    value
   </i>
   ]
  </p>
  <p>
   <b>
    Keywords for K-Means classification:
   </b>
  </p>
  <p>
   <a href="#CHANGE_THRESH_kmeans">
    CHANGE_THRESH
   </a>
   =
   <i>
    floating point
   </i>
   {0.0 to 1.0},
   <a href="#NUM_CLASSES_kmeans">
    NUM_CLASSES
   </a>
   =
   <i>
    integer
   </i>
  </p>
  <p>
   <b>
    Keywords for ISODATA classification:
   </b>
  </p>
  <p>
   <a href="#CHANGE_THRESH_isodata">
    CHANGE_THRESH
   </a>
   =
   <i>
    floating point
   </i>
   {0.0 to 1.0},
   <a href="#ISO_MERGE_DIST_isodata">
    ISO_MERGE_DIST
   </a>
   =
   <i>
    floating point
   </i>
   ,
   <a href="#ISO_MERGE_PAIRS_isodata">
    ISO_MERGE_PAIRS
   </a>
   =
   <i>
    value
   </i>
   ,
   <a href="#ISO_MIN_PIXELS_isodata">
    ISO_MIN_PIXELS
   </a>
   =
   <i>
    value
   </i>
   ,
   <a href="#ISO_SPLIT_SMULT_isodata">
    ISO_SPLIT_SMULT
   </a>
   =
   <i>
    floating point
   </i>
   ,
   <a href="#ISO_SPLIT_STD_isodata">
    ISO_SPLIT_STD
   </a>
   =
   <i>
    floating point
   </i>
   ,
   <a href="#MIN_CLASSES_isodata">
    MIN_CLASSES
   </a>
   =
   <i>
    integer
   </i>
   ,
   <a href="#NUM_CLASSES_isodata">
    NUM_CLASSES
   </a>
   =
   <i>
    integer
   </i>
  </p>
  <h2 class="API">
   <a name="Keywords">
   </a>
   Keywords
  </h2>
  <h3>
   <a name="CLASS_NAMES">
   </a>
   CLASS_NAMES
  </h3>
  <p>
   Use this keyword to specify names for each output class for the supervised classification methods (the unsupervised methods generate their own CLASS_NAMES based on the color of the class). CLASS_NAMES is an array of strings with
   <i>
    num_classes
   </i>
   +1 elements. The first element (Class 0) is “Unclassified.” The order of the other classes is determined by the order of the classification data specified in the keyword MEAN.
  </p>
  <h3>
   <a name="DIMS">
   </a>
   DIMS
  </h3>
  <p>
   The “dimensions” keyword is a five-element array of long integers that defines the spatial subset (of a file or array) to use for processing. Nearly every time you specify the keyword FID, you must also specify the spatial subset of the corresponding file (even if the entire file, with no spatial subsetting, is to be processed).
  </p>
  <ul>
   <li value="1">
    DIMS[0]: A pointer to an open ROI; use only in cases where ROIs define the spatial subset. Otherwise, set to -1L.
   </li>
   <li value="2">
    DIMS[1]: The starting sample number. The first x pixel is 0.
   </li>
   <li value="3">
    DIMS[2]: The ending sample number
   </li>
   <li value="4">
    DIMS[3]: The starting line number. The first y pixel is 0.
   </li>
   <li value="5">
    DIMS[4]: The ending line number
   </li>
  </ul>
  <p>
   To process an entire file (with no spatial subsetting), define DIMS as shown in the following code example. This example assumes you have already opened a file using
   <a href="../ENVI_S/ENVI_SELECT.htm">
    ENVI_SELECT
   </a>
   or
   <a href="../ENVI_P/ENVI_PICKFILE.htm">
    ENVI_PICKFILE
   </a>
   :
  </p>
  <p class="Code_Indented">
   envi_file_query, fid, dims=dims
  </p>
  <p>
   You
   <i>
    cannot
   </i>
   define DIMS as a pointer to a region of interest (ROI) in any of
   <span class="DocumentTitleProductName">
    ENVI
   </span>
   ’s _DOIT library routines. Using the following example code with a _DOIT library routine will result in an error message when you run the program:
  </p>
  <p class="Code_Indented">
   roi_ids = ENVI_GET_ROI_IDS()
  </p>
  <p class="Code_Indented">
   <br />
   roi_dims = ENVI_GET_ROI_DIMS_PTR(roi_ids[0])
  </p>
  <p class="Code_Indented">
   <br />
   dims= [roi_dims,0,0,0,0]
  </p>
  <h3>
   <a name="FID">
   </a>
   FID
  </h3>
  <p>
   The file ID (FID) is a long-integer scalar with a value greater than 0. An invalid FID has a value of -1. The FID is provided as a named variable by any routine used to open or select a file. Often, the FID is returned from the keyword R_FID in the
   <a href="../../ENVIRasterToFID.htm">
    ENVIRasterToFID
   </a>
   routine. Files are processed by referring to their FIDs. If you work directly with the file in IDL, the FID is
   <i>
    not
   </i>
   equivalent to a logical unit number (LUN).
  </p>
  <h3>
   <a name="IN_MEMORY">
   </a>
   IN_MEMORY
  </h3>
  <p>
   Set this keyword to specify that output should be stored in memory. If you do not set IN_MEMORY, output will be stored on disk and you must specify OUT_NAME (see below).
  </p>
  <h3>
   <a name="LOOKUP">
   </a>
   LOOKUP
  </h3>
  <p>
   Use this keyword to specify an array of long integers representing class RGB values for the supervised methods only (the unsupervised methods generate their own LOOKUP based on the number of output classes). The LOOKUP array contains an RGB triplet for the “Unclassified” class plus one RGB triplet for each output class. The “Unclassified” class typically uses the RGB triplet [0, 0, 0] for black. The dimensions of the array are [3,
   <i>
    num_classes
   </i>
   +1], and the RGB triplet is ordered [
   <i>
    r
   </i>
   ,
   <i>
    g
   </i>
   ,
   <i>
    b
   </i>
   ]. LOOKUP[*, 0] is the “Unclassified” class, and the order of the other classes is determined by the order of the classification data in keyword MEAN.
  </p>
  <h3>
   <a name="M_FID">
   </a>
   M_FID (optional)
  </h3>
  <p>
   Use this keyword to specify the file ID of the mask file. This value is returned from the keyword R_FID in the
   <a href="../ENVI_O/ENVI_OPEN_FILE.htm">
    ENVI_OPEN_FILE
   </a>
   procedure. M_FID is a long integer with a value greater than 0. An invalid file ID has a value of -1.
  </p>
  <h3>
   <a name="M_POS">
   </a>
   M_POS (optional)
  </h3>
  <p>
   Use this keyword to specify the band position of the mask band. M_POS is a long integer with a value greater than or equal to 0.
  </p>
  <h3>
   <a name="MEAN">
   </a>
   MEAN
  </h3>
  <p>
   Use this keyword to specify the mean spectral values for each class when performing supervised classification. MEAN is a floating-point or double-precision array of [
   <i>
    num_bands
   </i>
   ,
   <i>
    num_classes
   </i>
   ] values. The spectral mean of each class (for supervised methods) is commonly computed from the spectral mean of the ROI representing the training region of the class. The actual number of output classes, NUM_CLASSES, is computed from the number of spectral means plus one for the Unclassified class.
  </p>
  <p>
   For the unsupervised methods of ISODATA and K-Means, the initial starting classes are calculated automatically from the mean on the input data and do not require the MEAN keyword.
  </p>
  <h3>
   <a name="METHOD">
   </a>
   METHOD
  </h3>
  <p>
   Set this keyword equal to one of the following values to specify the classification method:
  </p>
  <ul>
   <li value="1">
    0: Parallelepiped (supervised)
   </li>
   <li value="2">
    1: Minimum distance (supervised)
   </li>
   <li value="3">
    2: Maximum likelihood (supervised)
   </li>
   <li value="4">
    3: SAM (supervised)
   </li>
   <li value="5">
    4: ISODATA (unsupervised)
   </li>
   <li value="6">
    5: Mahalanobis (supervised)
   </li>
   <li value="7">
    6: Binary Encoding (supervised)
   </li>
   <li value="8">
    7: K-Means (unsupervised)
   </li>
   <li value="9">
    8: SID (supervised)
   </li>
  </ul>
  <h3>
   <a name="OUT_BNAME">
   </a>
   OUT_BNAME (optional)
  </h3>
  <p>
   Use this keyword to specify an output band name for the classification image. OUT_BNAME is a single string value.
  </p>
  <h3>
   <a name="OUT_NAME">
   </a>
   OUT_NAME
  </h3>
  <p>
   Use this keyword to specify a string with the output filename for the resulting data. If you set the keyword IN_MEMORY, you do not need to specify OUT_NAME.
  </p>
  <h3>
   <a name="POS">
   </a>
   POS
  </h3>
  <p>
   Use this keyword to specify an array of band positions, indicating the band numbers on which to perform the operation. This keyword indicates the spectral subset of bands to use in processing. POS is an array of long integers, ranging from 0 to the number of bands minus 1. Specify bands starting with zero (Band 1=0, Band 2=1, etc.) For example, to process only Bands 3 and 4 of a multi-band file, POS=[2, 3].
  </p>
  <p>
   POS is typically used with individual files. The example code below for
   <a href="../ENVI_S/ENVI_STATS_DOIT.htm">
    ENVI_STATS_DOIT
   </a>
   illustrates the use of POS for a single file with four bands of data:
  </p>
  <p class="Code_Indented">
   pos=[0,1,2,3]
  </p>
  <p class="Code_Indented">
   <br />
   envi_doit, 'envi_stats_doit', dims=dims, fid=fid, pos=pos, $
  </p>
  <p class="Code_Indented">
   <br />
   comp_flag=3, dmin=dmin, dmax=dmax, mean=mean, stdv=stdv, hist=hist
  </p>
  <p>
   But what if you need to create an output file consisting of data from different bands, each from different files? Library routines such as
   <a href="CF_DOIT.htm">
    CF_DOIT
   </a>
   and
   <a href="../ENVI_L/ENVI_LAYER_STACKING_DOIT.htm">
    ENVI_LAYER_STACKING_DOIT
   </a>
   can accomplish this, but they use the POS keyword differently. Suppose you have four files,
   <code>
    test1
   </code>
   ,
   <code>
    test2
   </code>
   ,
   <code>
    test3
   </code>
   , and
   <code>
    test4
   </code>
   , with corresponding FIDs of
   <code>
    fid1
   </code>
   ,
   <code>
    fid2
   </code>
   ,
   <code>
    fid3
   </code>
   , and
   <code>
    fid4
   </code>
   , respectively. In the following example, you want Band 3 from
   <code>
    test1
   </code>
   in the first position, Band 2 from
   <code>
    test2
   </code>
   in the second position, Band 6 from
   <code>
    test3
   </code>
   in the third position, and Band 4 from
   <code>
    test4
   </code>
   in the fourth position. The code should be as follows:
  </p>
  <p class="Code_Indented">
   fid_array = [fid1,fid2,fid3,fid4]
  </p>
  <p class="Code_Indented">
   <br />
   pos=[2,1,5,3]
  </p>
  <p class="Code_Indented">
   <br />
   envi_doit, 'cf_doit', dims=dims, fid=fid_array
  </p>
  <p class="Code_Indented">
   <br />
   out_name='test_composite_file'
  </p>
  <h3>
   <a name="R_FID">
   </a>
   R_FID (optional)
  </h3>
  <p>
   <span class="DocumentTitleProductNameENVIClassic">
    ENVI Classic
   </span>
   library routines that result in new images also have an R_FID, or “returned FID.” This is simply a named variable containing the file ID to access the processed data. Specifying this keyword saves you the step of opening the new file from disk.
  </p>
  <h2 class="API">
   Keywords for Supervised Classification
  </h2>
  <p>
   The following keywords can be used with any of the supervised classification methods (parallelepiped, minimum distance, maximum likelihood, Mahalanobis, SAM, and Binary Encoding):
  </p>
  <h3>
   <a name="MEAN_supervised">
   </a>
   MEAN
  </h3>
  <p>
   Use this keyword to specify the mean spectral values for each class when performing supervised classification. MEAN is a floating-point or double-precision array of [
   <i>
    num_bands
   </i>
   ,
   <i>
    num_classes
   </i>
   ] values. The spectral mean of each class (for supervised methods) is commonly computed from the spectral mean of the ROI representing the training region of the class. The actual number of output classes, NUM_CLASSES, is computed from the number of spectral means plus one for the Unclassified class.
  </p>
  <p>
   For the unsupervised methods of ISODATA and K-Means, the initial starting classes are calculated automatically from the mean on the input data and do not require the MEAN keyword.
  </p>
  <h3>
   <a name="RULE_FID_supervised">
   </a>
   RULE_FID (optional)
  </h3>
  <p>
   Use this keyword to specify a named variable that contains the file ID for the processed rule image. This file ID can be used to access the processed data.
  </p>
  <h3>
   <a name="RULE_IN_MEMORY_supervised">
   </a>
   RULE_IN_MEMORY (optional)
  </h3>
  <p>
   Set this keyword to store output rule images in memory.
  </p>
  <h3>
   <a name="RULE_OUT_BNAME_supervised">
   </a>
   RULE_OUT_BNAME (optional)
  </h3>
  <p>
   Use this keyword to specify a string array that contains the output band names for the rule image.
  </p>
  <h3>
   <a name="RULE_OUT_NAME_supervised">
   </a>
   RULE_OUT_NAME (optional)
  </h3>
  <p>
   Use this keyword to specify an output filename for the rule image. If this item is present, the rule image is automatically saved.
  </p>
  <h2 class="API">
   Keywords for Parallelepiped Classification
  </h2>
  <h3>
   <a name="STDV_parallel">
   </a>
   STDV
  </h3>
  <p>
   Use this keyword to specify a floating-point or double-precision array with the dimensions [
   <i>
    num_bands
   </i>
   ,
   <i>
    num_classes
   </i>
   ] containing the standard deviation for each of the spectral classes.
  </p>
  <h3>
   <a name="STD_MULT_parallel">
   </a>
   STD_MULT (optional)
  </h3>
  <p>
   Use this keyword to specify a floating-point or double-precision multiplication factor or array of factors (one for each class) specifying the width around the standard deviation within which the spectrum may fall and still be classified into that class. If you specify an array, each class is tested with its corresponding width. The default value is 1.0.
  </p>
  <h2 class="API">
   Keywords for Minimum Distance Classification
  </h2>
  <h3>
   <a name="DATA_SCALE_minimum">
   </a>
   DATA_SCALE (optional)
  </h3>
  <p>
   Use this keyword to specify a floating-point value representing the data scale factor. The scale factor is a division factor used to convert integer scaled reflectance or radiance data into floating-point values. For example, for reflectance data scaled into the range of 0 to 10,000, set the scale factor to 10,000. For uncalibrated integer data, set the scale factor to the maximum value the instrument can measure ((2
   <span style="vertical-align: super;font-weight: normal;font-style: italic;">
    n
   </span>
   ) - 1, where
   <i>
    n
   </i>
   is the bit depth of the instrument). Set the scale factor to 255 for 8-bit instruments (such as Landsat-4), set the scale factor to 1023 for 10-bit instruments (such as NOAA-12 AVHRR), and set the scale factor to 2047 for 11-bit instruments (such as IKONOS).
  </p>
  <h3>
   <a name="STDV_minimum">
   </a>
   STDV
  </h3>
  <p>
   Use this keyword to specify a floating-point or double-precision array with dimensions [
   <i>
    num_bands
   </i>
   ,
   <i>
    num_classes
   </i>
   ], containing the standard deviation for each of the spectral classes. You must specify this value if you specify STD_MULT.
  </p>
  <h3>
   <a name="STD_MULT_minimum">
   </a>
   STD_MULT (optional)
  </h3>
  <p>
   Use this keyword to specify a floating-point or double-precision multiplication factor or array of factors (one for each class) specifying the width around the standard deviation within which the spectrum may fall and still be classified into that class. If you specify an array, each class is tested with its corresponding width. If you use STD_MULT, you must set the keyword STDV. The default value is 1.0.
  </p>
  <h3>
   <a name="THRESH_minimum">
   </a>
   THRESH (optional)
  </h3>
  <p>
   Use this keyword to specify a floating-point or double-precision maximum distance error or array of errors (one for each class) by which a spectral value can differ from the mean value. If you specify an array, each class is tested against its corresponding error. When you specify a single value, THRESH is applied class-by-class, not as the total error.
  </p>
  <h2 class="API">
   Keywords for Maximum Likelihood Classification
  </h2>
  <h3>
   <a name="COV_max">
   </a>
   COV
  </h3>
  <p>
   Use this keyword to specify a floating-point or double-precision array with dimensions [
   <i>
    num_bands
   </i>
   ,
   <i>
    num_bands
   </i>
   ,
   <i>
    num_classes
   </i>
   ] containing the covariance of the classification spectrum used.
  </p>
  <h3>
   <a name="DATA_SCALE_max">
   </a>
   DATA_SCALE
  </h3>
  <p>
   Use this keyword to specify a floating-point value representing the data scale factor. The scale factor is a division factor used to convert integer scaled reflectance or radiance data into floating-point values. For example, for reflectance data scaled into the range of 0 to 10,000, set the scale factor to 10,000. For uncalibrated integer data, set the scale factor to the maximum value the instrument can measure ((2
   <span style="vertical-align: super;font-weight: normal;font-style: italic;">
    n
   </span>
   ) - 1, where
   <i>
    n
   </i>
   is the bit depth of the instrument). Set the scale factor to 255 for 8-bit instruments (such as Landsat-4), set the scale factor to 1023 for 10-bit instruments (such as NOAA-12 AVHRR), and set the scale factor to 2047 for 11-bit instruments (such as IKONOS).
  </p>
  <h3>
   <a name="STDV_max">
   </a>
   STDV
  </h3>
  <p>
   Use this keyword to specify a floating-point or double-precision array with dimensions [
   <i>
    num_bands
   </i>
   ,
   <i>
    num_classes
   </i>
   ] containing the standard deviation for each of the spectral classes.
  </p>
  <h3>
   <a name="THRESH_max">
   </a>
   THRESH (optional)
  </h3>
  <p>
   Use this keyword to specify a floating-point or double-precision minimum probability or array of probabilities (one for each class) that a class must have in order to be classified. Specify a value from 0 to 1. If an array is specified, each class is tested against its corresponding probability.
  </p>
  <h2 class="API">
   Keywords for SAM Classification
  </h2>
  <h3>
   <a name="THRESH_sam">
   </a>
   THRESH (optional)
  </h3>
  <p>
   Use this keyword to specify a floating-point or double-precision maximum angle or array of maximum angles (one for each class) in radians, to classify. If you specify an array, each class is tested against its corresponding maximum spectral angle. THRESH should have a value between 0 and π/2. The default value is π/2.
  </p>
  <h2 class="API">
   Keywords for SID Classification
  </h2>
  <h3>
   <a name="THRESH_sid">
   </a>
   THRESH (optional)
  </h3>
  <p>
   Use this keyword to specify a floating-point or double-precision maximum value or array of maximum values (one for each class). If you specify an array, each class is tested against its corresponding maximum spectral divergence. The default value is .05, but can vary substantially given the nature of this similarity measure. SID is based upon a dimensionless metric involving the logarithm of a ratio of probabilities based upon each spectral vector. Therefore, a threshold that discriminates well for one pair of spectral vectors may be either too sensitive or not sensitive enough for another pair due to the similar/dissimilar nature of their probability distributions.
  </p>
  <h2 class="API">
   Keywords for Mahalanobis
  </h2>
  <h3>
   <a name="COV_mah">
   </a>
   COV
  </h3>
  <p>
   Use this keyword to specify a floating-point or double-precision array with dimensions [
   <i>
    num_bands
   </i>
   ,
   <i>
    num_bands
   </i>
   ,
   <i>
    num_classes
   </i>
   ] containing the covariance of the classification spectrum used.
  </p>
  <h3>
   <a name="NPTS_mah">
   </a>
   NPTS
  </h3>
  <p>
   Use this keyword to specify an array of long integers representing the number of points in each ROI, with one element per ROI. Use the
   <a href="../ENVI_G/ENVI_GET_ROI_INFORMATION.htm">
    ENVI_GET_ROI_INFORMATION
   </a>
   <![CDATA[ ]]>
   routine to return the number of points in each ROI.
  </p>
  <h3>
   <a name="THRESH_mah">
   </a>
   THRESH (optional)
  </h3>
  <p>
   Use this keyword to specify a floating-point or double-precision maximum distance error or array of errors (one for each class) by which a spectral value can differ from the mean value. If you specify an array, each class is tested against its corresponding error. When you specify a single value, THRESH is applied class-by-class, not as the total error.
  </p>
  <h2 class="API">
   Keywords for Binary Encoding
  </h2>
  <h3>
   <a name="THRESH_binary">
   </a>
   THRESH (optional)
  </h3>
  <p>
   Use this keyword to specify a floating-point or double-precision minimum match percent or array of minimum match percents (one for each class). The value of THRESH is between 0.0 and 1.0, ranging from 0% to 100%. If you specify an array, each class is tested against its corresponding minimum match percent. For example, a value of 1.0 means that all bands must match the Binary Encoding, and a value of 0.4 means that at least 40% of the bands must match.
  </p>
  <h2 class="API">
   Keywords for Unsupervised Classification
  </h2>
  <p>
   You can use the following keywords with any of the unsupervised classification methods (K-Means and ISODATA):
  </p>
  <h3>
   <a name="ITERATIONS_unsup">
   </a>
   ITERATIONS
  </h3>
  <p>
   Use this keyword to specify the maximum iteration count.
  </p>
  <h3>
   <a name="STD_MULT_unsup">
   </a>
   STD_MULT (optional)
  </h3>
  <p>
   Use this keyword to specify a floating-point multiplication factor specifying the width around the standard deviation within which a spectrum may fall and still be classified into that class. The default value is 1.0.
  </p>
  <h3>
   <a name="THRESH_unsup">
   </a>
   THRESH (optional)
  </h3>
  <p>
   Use this keyword to specify the maximum distance error by which a spectral value can differ from a mean value. The THRESH value is applied band by band, not as the total error.
  </p>
  <h2 class="API">
   Keywords for K-Means
  </h2>
  <h3>
   <a name="CHANGE_THRESH_kmeans">
   </a>
   CHANGE_THRESH
  </h3>
  <p>
   Set this keyword to a floating-point number between 0.0 and 1.0 to specify the percentage of pixels that can change classes during each iteration. If this value is greater than the CHANGE_THRESH value, another iteration is performed, provided that it does not exceed the maximum number of iterations. If the percentage is less then the threshold, the classification is complete. A value of 1.0 means 100%.
  </p>
  <h3>
   <a name="NUM_CLASSES_kmeans">
   </a>
   NUM_CLASSES
  </h3>
  <p>
   Use this keyword to specify the desired number of output classes.
  </p>
  <h2 class="API">
   Keywords for ISODATA
  </h2>
  <h3>
   <a name="CHANGE_THRESH_isodata">
   </a>
   CHANGE_THRESH
  </h3>
  <p>
   Set this keyword to a floating-point number between 0.0 and 1.0 to specify the percentage of pixels that can change classes during each iteration. If this value is greater than the CHANGE_THRESH value, another iteration is performed, provided that it does not exceed the maximum number of iterations. If the percentage is less then the threshold, the classification is complete. A value of 1.0 means 100%.
  </p>
  <h3>
   <a name="ISO_MERGE_DIST_isodata">
   </a>
   ISO_MERGE_DIST
  </h3>
  <p>
   Set this keyword to a floating-point number greater than 0.0 to specify the class merge distance (in DN). If the distance between class means is less than ISO_MERGE_DIST, the classes will be merged. The maximum number of pairs merged in any loop is determined by ISO_MERGE_PAIRS.
  </p>
  <h3>
   <a name="ISO_MERGE_PAIRS_isodata">
   </a>
   ISO_MERGE_PAIRS
  </h3>
  <p>
   Set this keyword to a long-integer value to specify the maximum number of classes that can be merged in a single iteration.
  </p>
  <h3>
   <a name="ISO_MIN_PIXELS_isodata">
   </a>
   ISO_MIN_PIXELS
  </h3>
  <p>
   Set this keyword to a long-integer value to specify the minimum number of pixels needed to form a class. If there are few pixels in the class, that class will be deleted.
  </p>
  <h3>
   <a name="ISO_SPLIT_SMULT_isodata">
   </a>
   ISO_SPLIT_SMULT
  </h3>
  <p>
   Set this keyword to a floating-point number greater than 0.0 to specify the standard deviation multiplier used to calculate the mean of split classes. The new means are calculated as follows:
  </p>
  <pre class="indent">
   class_1_mean = class_mean + ISO_SPLIT_STD * current_stdv
   <br />
   class_2_mean = class_mean - ISO_SPLIT_STD * current_stdv
  </pre>
  <p>
   The default value is 1.0.
  </p>
  <h3>
   <a name="ISO_SPLIT_STD_isodata">
   </a>
   ISO_SPLIT_STD
  </h3>
  <p>
   Set this keyword to a floating-point number greater than 0.0 to specify the minimum class standard deviation value (in DN). If a class standard deviation is greater than ISO_SPLIT_STD, the class is split into two classes.
  </p>
  <h3>
   <a name="MIN_CLASSES_isodata">
   </a>
   MIN_CLASSES
  </h3>
  <p>
   Use this keyword to specify an integer value of the desired minimum number of output classes.
  </p>
  <h3>
   <a name="NUM_CLASSES_isodata">
   </a>
   NUM_CLASSES
  </h3>
  <p>
   Use this keyword to specify an integer value of the desired maximum number of output classes.
  </p>
  <div class="mp_footer">
   Copyright ©
   <span class="DocumentTitleCopyrightYear">
    2012
   </span>
   <![CDATA[ ]]>
   <span class="DocumentTitleCopyrightCompanyName">
    Exelis Visual Information Solutions, Inc.
   </span>
   All Rights Reserved.
  </div>
  <script type="text/javascript" src="../../../SkinSupport/MadCapBodyEnd.js">
  </script>
 </body>
</html>