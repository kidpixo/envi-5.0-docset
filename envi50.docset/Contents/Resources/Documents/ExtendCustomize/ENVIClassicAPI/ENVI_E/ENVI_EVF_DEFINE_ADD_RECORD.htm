<?xml version='1.0' encoding='utf-8'?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns:madcap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" madcap:lastblockdepth="2" madcap:lastheight="135.6667" madcap:lastwidth="592" madcap:disablemasterstylesheet="true" madcap:tocpath="Programming|Routines|Data Control|ENVI Classic" madcap:medium="non-print" madcap:inpreviewmode="false" madcap:preloadimages="false" madcap:runtimefiletype="Topic" madcap:targettype="WebHelp" lang="en-us" xml:lang="en-us" madcap:pathtohelpsystem="../../../../" madcap:helpsystemfilename="ENVIHelp.xml" madcap:searchtype="Stem">
 <!-- saved from url=(0014)about:internet -->
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>
   ENVI_EVF_DEFINE_ADD_RECORD
  </title>
  <link href="../../../SkinSupport/MadCap.css" rel="stylesheet" />
  <link href="../../../Resources/Stylesheets/Doc_Style.css" rel="stylesheet" />
  <script src="../../../SkinSupport/MadCapAll.js" type="text/javascript">
  </script>
 </head>
 <body>
  <p class="MCWebHelpFramesetLink" style="display: none;">
   <a href="../../../../ENVIHelp_CSH.htm#ExtendCustomize/ENVIClassicAPI/ENVI_E/ENVI_EVF_DEFINE_ADD_RECORD.htm" style="">
    Open topic with navigation
   </a>
  </p>
  <div class="MCBreadcrumbsBox_0">
   <span class="MCBreadcrumbsPrefix">
    <![CDATA[ ]]>
   </span>
   <a class="MCBreadcrumbsLink" href="../../ProgrammingWithENVI.htm">
    Programming
   </a>
   <span class="MCBreadcrumbsDivider">
    &gt;
   </span>
   <a class="MCBreadcrumbsLink" href="../../Routines.htm">
    Routines
   </a>
   <span class="MCBreadcrumbsDivider">
    &gt;
   </span>
   <a class="MCBreadcrumbsLink" href="../../ENVICoordSys.htm">
    Data Control
   </a>
   <span class="MCBreadcrumbsDivider">
    &gt;
   </span>
   <span class="MCBreadcrumbs">
    ENVI_EVF_DEFINE_ADD_RECORD
   </span>
  </div>
  <h1>
   <a name="kanchor533">
   </a>
   ENVI_EVF_DEFINE_ADD_RECORD
  </h1>
  <p>
   <a href="#Syntax">
    Syntax
   </a>
   |
   <a href="#Arguments">
    Arguments
   </a>
   |
   <a href="#Keywords">
    Keywords
   </a>
   |
   <a href="#Example">
    Example
   </a>
  </p>
  <p>
   Use this procedure to add a record to a new EVF. It accepts points, polylines, and polygon records.
  </p>
  <h2 class="API">
   <a name="Syntax">
   </a>
   Syntax
  </h2>
  <p>
   ENVI_EVF_DEFINE_ADD_RECORD,
   <i>
    EVF_PTR
   </i>
   ,
   <i>
    Points
   </i>
   [,
   <a href="#PARTS">
    PARTS_PTR
   </a>
   =
   <i>
    value
   </i>
   ] [,
   <a href="#TYPE">
    TYPE
   </a>
   =
   <i>
    value
   </i>
   ]
  </p>
  <h2 class="API">
   <a name="Arguments">
   </a>
   Arguments
  </h2>
  <h3>
   EVF_PTR
  </h3>
  <p>
   This is the pointer to the new EVF, and it is returned from ENVI_EVF_DEFINE_INIT.
  </p>
  <p>
   This pointer is not the same as an ordinary EVF ID.
  </p>
  <h3>
   Points
  </h3>
  <p>
   This argument is a two-column array of x,y points that define the vector record added to the EVF. A point record consists of a single x,y pair, a polyline record consists of multiple x,y pairs, and a polygon record is a polyline with the same first and last points. Points is an array of [2, npts] where [0,*] are the x points and [1,*] are the y points. The data type of the x,y pairs (or nodes) that define the vector record will automatically be converted into the data type of the EVF defined in the call to ENVI_EVF_DEFINE_INIT.
  </p>
  <p class="TipNote">
   <b>
    Tip:
   </b>
   &#160;For points in a Geographic projection, remember to arrange the points vector as [longitude, latitude] to conform to the x, y order.
  </p>
  <h2 class="API">
   <a name="Keywords">
   </a>
   Keywords
  </h2>
  <h3>
   <a name="PARTS">
   </a>
   PARTS_PTR (optional)
  </h3>
  <p>
   Use this keyword along with the TYPE keyword when adding points to a vector record to indicate that the polygon is a multipart polygon. Multi-part polygons are commonly used to specify holes within polygons. The PARTS_PTR keyword tells
   <span class="DocumentTitleProductNameENVIClassic">
    ENVI Classic
   </span>
   how to order the points in the file. You should specify the points of the main polygon first, followed by the points for the holes within the polygon.
  </p>
  <p>
   Suppose you are defining a polygon with three internal holes. It has 33 points total; the first 7 points define the main polygon, the next 10 define the first hole, the next 8 define the second hole, and the last 7 define the third hole. Define PARTS_PTR as follows:
  </p>
  <p xml:space="preserve" class="Code">
   parts_ptr = [0L, 7, -17, -25, -32]
  </p>
  <p>
   Where the negative sign denotes nodes that are multipart.
  </p>
  <h3>
   <a name="TYPE">
   </a>
   TYPE (optional)
  </h3>
  <p>
   Use this keyword along with the PARTS_PTR keyword to indicate the type of multipart vector data you are working with. Following are the possible values for TYPE:
  </p>
  <ul>
   <li value="1">
    1: Point
   </li>
   <li value="2">
    3: Polyline
   </li>
   <li value="3">
    5: Polygon
   </li>
   <li value="4">
    8: Multi-point
   </li>
  </ul>
  <p>
   Set TYPE=5 when defining multipart polygon records.
  </p>
  <h2 class="API">
   <a name="Example">
   </a>
   Example
  </h2>
  <p class="Code">
   PRO CREATE_NEW_EVF_FILE
  </p>
  <p class="Code_Indented">
   compile_opt IDL2
  </p>
  <p class="Code_Indented">
   ;
  </p>
  <p class="Code_Indented">
   ; Create a Geographic projection
  </p>
  <p class="Code_Indented">
   ; with the default datum and units.
  </p>
  <p class="Code_Indented">
   ;
  </p>
  <p class="Code_Indented">
   proj = envi_proj_create(/geographic)
  </p>
  <p class="Code_Indented">
   ;
  </p>
  <p class="Code_Indented">
   ; Define a polyline vector in Lat/Lon coordinates
  </p>
  <p class="Code_Indented">
   ;
  </p>
  <p class="Code_Indented">
   polyline = [-106.904,      41.5887, $
  </p>
  <p class="Code_Indented">
   &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;-106.821,      42.2302, $
  </p>
  <p class="Code_Indented">
   &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;-106.013,      42.2183, $
  </p>
  <p class="Code_Indented">
   &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;-105.206,      41.3749, $
  </p>
  <p class="Code_Indented">
   &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;-105.657,      40.5078, $
  </p>
  <p class="Code_Indented">
   &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;-105.835,      39.5574, $
  </p>
  <p class="Code_Indented">
   &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;-105.170,      38.8447, $
  </p>
  <p class="Code_Indented">
   &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;-104.125,      39.4862, $
  </p>
  <p class="Code_Indented">
   &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;-103.269,      40.0563, $
  </p>
  <p class="Code_Indented">
   &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;-103.269,      40.0682, $
  </p>
  <p class="Code_Indented">
   &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;-102.913,      39.0585, $
  </p>
  <p class="Code_Indented">
   &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;-102.901,      39.0585, $
  </p>
  <p class="Code_Indented">
   &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;-102.901,      39.0348, $
  </p>
  <p class="Code_Indented">
   &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;-103.210,      38.4289, $
  </p>
  <p class="Code_Indented">
   &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;-103.804,      38.3695]
  </p>
  <p class="Code_Indented">
   polyline = reform(polyline, 2, 15)
  </p>
  <p class="Code_Indented">
   ;
  </p>
  <p class="Code_Indented">
   ; define a polygon in Lat/Lon coordinates
  </p>
  <p class="Code_Indented">
   ; (note first and last coords are identical)
  </p>
  <p class="Code_Indented">
   ;
  </p>
  <p class="Code_Indented">
   polygon = [-104.113,      41.6956, $
  </p>
  <p class="Code_Indented">
   &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;-103.994,      42.1589, $
  </p>
  <p class="Code_Indented">
   &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;-103.934,      41.6838, $
  </p>
  <p class="Code_Indented">
   &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;-103.471,      41.8738, $
  </p>
  <p class="Code_Indented">
   &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;-103.887,      41.5531, $
  </p>
  <p class="Code_Indented">
   &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;-103.863,      41.0185, $
  </p>
  <p class="Code_Indented">
   &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;-103.851,      41.0185, $
  </p>
  <p class="Code_Indented">
   &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;-104.041,      41.4818, $
  </p>
  <p class="Code_Indented">
   &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;-104.041,      41.4937, $
  </p>
  <p class="Code_Indented">
   &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;-104.552,      41.2680, $
  </p>
  <p class="Code_Indented">
   &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;-104.220,      41.6006, $
  </p>
  <p class="Code_Indented">
   &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;-104.422,      42.0995, $
  </p>
  <p class="Code_Indented">
   &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;-104.113,      41.6956]
  </p>
  <p class="Code_Indented">
   polygon = reform(polygon, 2, 13)
  </p>
  <p class="Code_Indented">
   ;
  </p>
  <p class="Code_Indented">
   ; define a set of discrete points in Lat/Lon coordinates
  </p>
  <p class="Code_Indented">
   points = [-106.572,      39.6643, $
  </p>
  <p class="Code_Indented">
   &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;-106.643,      39.5218, $
  </p>
  <p class="Code_Indented">
   &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;-106.453,      39.4386, $
  </p>
  <p class="Code_Indented">
   &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;-106.417,      39.6168, $
  </p>
  <p class="Code_Indented">
   &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;-106.595,      39.4386, $
  </p>
  <p class="Code_Indented">
   &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;-106.774,      39.2011, $
  </p>
  <p class="Code_Indented">
   &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;-106.215,      39.4030, $
  </p>
  <p class="Code_Indented">
   &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;-106.393,      39.2961, $
  </p>
  <p class="Code_Indented">
   &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;-106.560,      39.1892, $
  </p>
  <p class="Code_Indented">
   &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;-106.536,      38.9872, $
  </p>
  <p class="Code_Indented">
   &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;-106.227,      39.1417, $
  </p>
  <p class="Code_Indented">
   &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;-106.192,      39.1179, $
  </p>
  <p class="Code_Indented">
   &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;-106.263,      38.9635, $
  </p>
  <p class="Code_Indented">
   &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;-106.073,      39.1298, $
  </p>
  <p class="Code_Indented">
   &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;-106.073,      39.2367]
  </p>
  <p class="Code_Indented">
   points = reform(points, 2, 15)
  </p>
  <p class="Code_Indented">
   ;
  </p>
  <p class="Code_Indented">
   ; Initialize the new EVF file
  </p>
  <p class="Code_Indented">
   ;
  </p>
  <p class="Code_Indented">
   evf_ptr = envi_evf_define_init('sample.evf', $
  </p>
  <p class="Code_Indented">
   &#160;&#160;&#160;&#160;&#160;projection=proj, data_type=4, $
  </p>
  <p class="Code_Indented">
   &#160;&#160;&#160;&#160;&#160;layer_name='Sample EVF File')
  </p>
  <p class="Code_Indented">
   if (ptr_valid(evf_ptr) eq 0) then return
  </p>
  <p class="Code_Indented">
   ;
  </p>
  <p class="Code_Indented">
   ; add the discrete points as individual records
  </p>
  <p class="Code_Indented">
   ;
  </p>
  <p class="Code_Indented">
   for i=0,14 do $
  </p>
  <p class="Code_Indented">
   &#160;&#160;&#160;envi_evf_define_add_record, evf_ptr, points[*,i]
  </p>
  <p class="Code_Indented">
   ;
  </p>
  <p class="Code_Indented">
   ; add the polyline record
  </p>
  <p class="Code_Indented">
   ;
  </p>
  <p class="Code_Indented">
   envi_evf_define_add_record, evf_ptr, polyline
  </p>
  <p class="Code_Indented">
   ;
  </p>
  <p class="Code_Indented">
   ; add the polygon record
  </p>
  <p class="Code_Indented">
   ;
  </p>
  <p class="Code_Indented">
   envi_evf_define_add_record, evf_ptr, polygon
  </p>
  <p class="Code_Indented">
   ;
  </p>
  <p class="Code_Indented">
   ; Finish defining the new EVF file and
  </p>
  <p class="Code_Indented">
   ; then close the EVF file
  </p>
  <p class="Code_Indented">
   ;
  </p>
  <p class="Code_Indented">
   evf_id = envi_evf_define_close(evf_ptr, /return_id)
  </p>
  <p class="Code_Indented">
   envi_evf_close, evf_id
  </p>
  <p class="Code_Indented">
   ;
  </p>
  <p class="Code_Indented">
   ; create an attribute file for this new EVF file
  </p>
  <p class="Code_Indented">
   ;
  </p>
  <p class="Code_Indented">
   ; records 1-15 are individual points
  </p>
  <p class="Code_Indented">
   ; record 16 is a polyline
  </p>
  <p class="Code_Indented">
   ; record 17 is a polygon
  </p>
  <p class="Code_Indented">
   ;
  </p>
  <p class="Code_Indented">
   attributes = replicate( {name:'', id:0L}, 17)
  </p>
  <p class="Code_Indented">
   for i=0,14 do begin
  </p>
  <p class="Code_Indented">
   &#160;&#160;&#160;attributes[i].name = 'Sample Point ' + strtrim(i+1,2)
  </p>
  <p class="Code_Indented">
   &#160;&#160;&#160;attributes[i].id = i+1
  </p>
  <p class="Code_Indented">
   endfor
  </p>
  <p class="Code_Indented">
   attributes[15].name = 'Sample Polyline'
  </p>
  <p class="Code_Indented">
   attributes[15].id = 16
  </p>
  <p class="Code_Indented">
   attributes[16].name = 'Sample Polygon'
  </p>
  <p class="Code_Indented">
   attributes[16].id = 17
  </p>
  <p class="Code_Indented">
   envi_write_dbf_file, 'sample.dbf', attributes
  </p>
  <p class="Code">
   END
  </p>
  <div class="mp_footer">
   Copyright ©
   <span class="DocumentTitleCopyrightYear">
    2012
   </span>
   <![CDATA[ ]]>
   <span class="DocumentTitleCopyrightCompanyName">
    Exelis Visual Information Solutions, Inc.
   </span>
   All Rights Reserved.
  </div>
  <script type="text/javascript" src="../../../SkinSupport/MadCapBodyEnd.js">
  </script>
 </body>
</html>