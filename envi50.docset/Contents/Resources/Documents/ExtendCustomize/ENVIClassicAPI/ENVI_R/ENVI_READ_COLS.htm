<?xml version='1.0' encoding='utf-8'?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns:madcap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" madcap:lastblockdepth="2" madcap:lastheight="135.6667" madcap:lastwidth="592" madcap:disablemasterstylesheet="true" madcap:tocpath="Programming|Routines|Data Control|ENVI Classic" madcap:medium="non-print" madcap:inpreviewmode="false" madcap:preloadimages="false" madcap:runtimefiletype="Topic" madcap:targettype="WebHelp" lang="en-us" xml:lang="en-us" madcap:pathtohelpsystem="../../../../" madcap:helpsystemfilename="ENVIHelp.xml" madcap:searchtype="Stem">
 <!-- saved from url=(0014)about:internet -->
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>
   ENVI_READ_COLS
  </title>
  <link href="../../../SkinSupport/MadCap.css" rel="stylesheet" />
  <link href="../../../Resources/Stylesheets/Doc_Style.css" rel="stylesheet" />
  <script src="../../../SkinSupport/MadCapAll.js" type="text/javascript">
  </script>
 </head>
 <body>
  <p class="MCWebHelpFramesetLink" style="display: none;">
   <a href="../../../../ENVIHelp_CSH.htm#ExtendCustomize/ENVIClassicAPI/ENVI_R/ENVI_READ_COLS.htm" style="">
    Open topic with navigation
   </a>
  </p>
  <div class="MCBreadcrumbsBox_0">
   <span class="MCBreadcrumbsPrefix">
    <![CDATA[ ]]>
   </span>
   <a class="MCBreadcrumbsLink" href="../../ProgrammingWithENVI.htm">
    Programming
   </a>
   <span class="MCBreadcrumbsDivider">
    &gt;
   </span>
   <a class="MCBreadcrumbsLink" href="../../Routines.htm">
    Routines
   </a>
   <span class="MCBreadcrumbsDivider">
    &gt;
   </span>
   <a class="MCBreadcrumbsLink" href="../../ENVICoordSys.htm">
    Data Control
   </a>
   <span class="MCBreadcrumbsDivider">
    &gt;
   </span>
   <span class="MCBreadcrumbs">
    ENVI_READ_COLS
   </span>
  </div>
  <h1>
   <a name="kanchor567">
   </a>
   ENVI_READ_COLS
  </h1>
  <p>
   Use this procedure to read ASCII column data.
  </p>
  <h2 class="API">
   Syntax
  </h2>
  <p>
   ENVI_READ_COLS,
   <i>
    Name
   </i>
   ,
   <i>
    Values
   </i>
   [,
   <a href="#ERROR">
    ERROR
   </a>
   =
   <i>
    variable
   </i>
   ] [,
   <a href="#HEAD">
    HEAD
   </a>
   =
   <i>
    string array
   </i>
   ] [, /
   <a href="#READ_HEAD">
    READ_HEAD
   </a>
   ] [, /
   <a href="#READ_SKIP">
    READ_SKIP
   </a>
   ] [,
   <a href="#SKIP">
    SKIP
   </a>
   =
   <i>
    string array
   </i>
   ]
  </p>
  <h2 class="API">
   Arguments
  </h2>
  <h3>
   Name
  </h3>
  <p>
   This is the filename to read from.
  </p>
  <h3>
   Values
  </h3>
  <p>
   This is a named variable containing the values to read from
   <i>
    Name
   </i>
   .
  </p>
  <h2 class="API">
   Keywords
  </h2>
  <h3>
   <a name="ERROR">
   </a>
   ERROR (optional)
  </h3>
  <p>
   Use this keyword to specify a named variable that holds the value of the error flag. If this variable is set to a value of 1, there was a read error. A value of 0 indicates no error.
  </p>
  <h3>
   <a name="HEAD">
   </a>
   HEAD (optional)
  </h3>
  <p>
   Use this keyword to specify a string array that contains the first five rows of data from the file being read.
  </p>
  <h3>
   <a name="READ_HEAD">
   </a>
   READ_HEAD (optional)
  </h3>
  <p>
   Set this keyword to read the column header and store the result in the string array specified by the keyword HEAD.
  </p>
  <h3>
   <a name="READ_SKIP">
   </a>
   READ_SKIP (optional)
  </h3>
  <p>
   Set this keyword to save all skipped lines in the array specified by the SKIP keyword. Lines are only skipped when they cannot be decoded into the proper values.
  </p>
  <h3>
   <a name="SKIP">
   </a>
   SKIP (optional)
  </h3>
  <p>
   Use this keyword to specify a string array that contains skipped lines. You must use this keyword if you set READ_SKIP.
  </p>
  <h2 class="API">
   Example
  </h2>
  <p>
   The following example is similar to that of
   <a href="ENVI_REGISTER_DOIT.htm">
    ENVI_REGISTER_DOIT
   </a>
   , but it uses ENVI_READ_COLS to read an ASCII file of ground control points (GCPs) instead of explicitly defining the GCPs in the code. The example performs image-to-map registration using GCPs on a Boulder, Colorado, Landsat scene.
  </p>
  <p class="Code">
   PRO EXAMPLE_ENVI_READ_COLS
  </p>
  <p class="Code_Indented">
   compile_opt IDL2
  </p>
  <p class="Code_Indented">
   ; First restore all the base save files.
  </p>
  <p class="Code_Indented">
   ;
  </p>
  <p class="Code_Indented">
   envi, /restore_base_save_files
  </p>
  <p class="Code_Indented">
   ;
  </p>
  <p class="Code_Indented">
   ; Initialize ENVI and send all errors
  </p>
  <p class="Code_Indented">
   ; and warnings to the file batch.txt
  </p>
  <p class="Code_Indented">
   ;
  </p>
  <p class="Code_Indented">
   envi_batch_init, log_file='batch.txt'
  </p>
  <p class="Code_Indented">
   ;
  </p>
  <p class="Code_Indented">
   ; Open the input file
  </p>
  <p class="Code_Indented">
   ;
  </p>
  <p class="Code_Indented">
   input_file = 'bldr_tm.img'
  </p>
  <p class="Code_Indented">
   envi_open_file, input_file, r_fid=fid
  </p>
  <p class="Code_Indented">
   if (fid eq -1) then begin
  </p>
  <p class="Code_Indented">
   &#160;&#160;&#160;envi_batch_exit
  </p>
  <p class="Code_Indented">
   &#160;&#160;&#160;return
  </p>
  <p class="Code_Indented">
   endif
  </p>
  <p class="Code_Indented">
   ;
  </p>
  <p class="Code_Indented">
   ; Set the DIMS and POS to keywords
  </p>
  <p class="Code_Indented">
   ; to processes all spatial and all
  </p>
  <p class="Code_Indented">
   ; spectral data. Output the result
  </p>
  <p class="Code_Indented">
   ; to disk.
  </p>
  <p class="Code_Indented">
   ;
  </p>
  <p class="Code_Indented">
   envi_file_query, fid, dims=dims, nb=nb
  </p>
  <p class="Code_Indented">
   pos  = lindgen(nb)
  </p>
  <p class="Code_Indented">
   out_name = 'testimg'
  </p>
  <p class="Code_Indented">
   ;
  </p>
  <p class="Code_Indented">
   ; Read the points file with the map
  </p>
  <p class="Code_Indented">
   ; coordinates for known pixel locations and
  </p>
  <p class="Code_Indented">
   ; create projection for the map coordinates.
  </p>
  <p class="Code_Indented">
   ; Set the output pixel size to 30 meters.
  </p>
  <p class="Code_Indented">
   ;
  </p>
  <p class="Code_Indented">
   pts_file='bldrtm_m.pts'
  </p>
  <p class="Code_Indented">
   envi_read_cols, pts_file, pts
  </p>
  <p class="Code_Indented">
   ;
  </p>
  <p class="Code_Indented">
   ; Create the projection of the map coordinates
  </p>
  <p class="Code_Indented">
   ;
  </p>
  <p class="Code_Indented">
   units = envi_translate_projection_units('Meters')
  </p>
  <p class="Code_Indented">
   proj = envi_proj_create(/utm, zone=13, $
  </p>
  <p class="Code_Indented">
   &#160;&#160;&#160;datum='North America 1927', units=units)
  </p>
  <p class="Code_Indented">
   pixel_size = [30., 30.]
  </p>
  <p class="Code_Indented">
   ;
  </p>
  <p class="Code_Indented">
   ; Perform the image-to-map registration.
  </p>
  <p class="Code_Indented">
   ;
  </p>
  <p class="Code_Indented">
   envi_doit, 'envi_register_doit', $
  </p>
  <p class="Code_Indented">
   &#160;&#160;&#160;w_fid=fid, w_pos=pos, w_dims=dims, $
  </p>
  <p class="Code_Indented">
   &#160;&#160;&#160;method=2, out_name=out_name, $
  </p>
  <p class="Code_Indented">
   &#160;&#160;&#160;pts=pts, pixel_size=pixel_size, $
  </p>
  <p class="Code_Indented">
   &#160;&#160;&#160;proj=proj, r_fid=r_fid
  </p>
  <p class="Code_Indented">
   ;
  </p>
  <p class="Code_Indented">
   ; Exit ENVI
  </p>
  <p class="Code_Indented">
   ;
  </p>
  <p class="Code_Indented">
   envi_batch_exit
  </p>
  <p class="Code">
   END
  </p>
  <div class="mp_footer">
   Copyright Â©
   <span class="DocumentTitleCopyrightYear">
    2012
   </span>
   <![CDATA[ ]]>
   <span class="DocumentTitleCopyrightCompanyName">
    Exelis Visual Information Solutions, Inc.
   </span>
   All Rights Reserved.
  </div>
  <script type="text/javascript" src="../../../SkinSupport/MadCapBodyEnd.js">
  </script>
 </body>
</html>